import java.util.Arrays;
import java.util.List;
import java.util.ArrayList;

class Solution 
{
    public String[] solution(String[] players, String[] callings) 
    {
        
        
        ArrayList<String> ansList = new ArrayList<String>();
        ArrayList<String> playersList = new ArrayList<String>();
        ArrayList<String> callingsList = new ArrayList<String>();
        
        for(int i=0;i<players.length;i++)
        {
            playersList.add(players[i]);
        }
        for(int i=0;i<callings.length;i++)
        {
            callingsList.add(callings[i]);
        }
        
        
        //System.out.println(playersList);
        //System.out.println(callingsList);
        
        for(int i=0;i<callingsList.size();i++)
        {
            int changeIndex = playersList.indexOf(callingsList.get(i));
            String temp = playersList.get(changeIndex);
            playersList.set(changeIndex,playersList.get(changeIndex-1));
            playersList.set(changeIndex-1,temp);
            //System.out.println(playersList);
        }
        
        String[] ans = new String[playersList.size()];
        ans = playersList.toArray(ans);
        
        
        return ans;
    }
}

시간 초과 나옴 개빡침 ㅠㅠ 며칠 안했다고 머가리가 퇴행함
---------------------------------------------------------------------------
방법 자체가 틀린것 같아 찾아보니 시간 복잡도 관련 내용이 들어가있다
물론 나도 문제 풀기전에 시간복잡도를 확인해서 최악의 경우에 500억번 계산한다고 나왔지만
괜찮겠지 하고 넘어갔는데 안됐다. 처음부터 시간 복잡도를 확인했을때 안될 것 같으면 맞는 방법부터 생각해봐야겠다
자료구조 공부 부족이다. 해쉬맵은 key와 value를 바로 찾기 때문에 시간 복잡도가 O(1)이란다.
상상도 못했던 방법이다. 자료구조랑 알고리즘 공부 더 해야겠다
Hashmap 이용해서 푸는건 내일 해보겠다.
